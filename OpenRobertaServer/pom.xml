<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>de.fhg.iais.openroberta</groupId>
        <artifactId>OpenRobertaParent</artifactId>
        <version>0.0.1-SNAPSHOT</version>
        <relativePath>../OpenRobertaParent</relativePath>
    </parent>
    <artifactId>OpenRobertaServer</artifactId>
    <name>OpenRobertaServer</name>
    <description>the server of the OpenRoberta application including the static resources delivered to the browser</description>
    <dependencies>
        <dependency>
            <groupId>de.fhg.iais.openroberta</groupId>
            <artifactId>OpenRobertaShared</artifactId>
        </dependency>
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
        </dependency>
        <dependency>
            <groupId>org.eclipse.jetty</groupId>
            <artifactId>jetty-servlet</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-servlet</artifactId>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-json</artifactId>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-server</artifactId>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey.contribs</groupId>
            <artifactId>jersey-guice</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.xerial</groupId>
            <artifactId>sqlite-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.antlr</groupId>
            <artifactId>antlr4</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.2</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>add-source</id>
                        <configuration>
                            <sources>
                                <source>target/generated-sources/jaxb/blockly</source>
                            </sources>
                            <sources>
                                <source>target/generated-sources/antlr4</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>jaxb2-maven-plugin</artifactId>
                <version>1.5</version>
                <executions>
                    <execution>
                        <id>xjc-1</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>xjc</goal>
                        </goals>
                        <configuration>
                            <schemaDirectory>src/main/resources</schemaDirectory>
                            <schemaFiles>blockly.xsd</schemaFiles>
                            <outputDirectory>${project.build.directory}/generated-sources/jaxb/blockly</outputDirectory>
                            <packageName>de.fhg.iais.roberta.blockly.generated</packageName>
                            <staleFile>${project.build.directory}/jaxb2/.xjc-1-StaleFlag</staleFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.antlr</groupId>
                <artifactId>antlr4-maven-plugin</artifactId>
                <version>4.2</version>
                <executions>
                    <execution>
                        <id>antlr</id>
                        <goals>
                            <goal>antlr4</goal>
                        </goals>
                        <configuration>
                            <listener>true</listener>
                            <visitor>true</visitor>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.3</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <transformers>
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>de.fhg.iais.roberta.javaServer.jetty.ServerStarter</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <reporting>
        <plugins>
            <plugin>
                <groupId>gr.abiss.mvn.plugins</groupId>
                <artifactId>maven-jstools-plugin</artifactId>
                <version>0.6</version>
                <inherited>false</inherited>
                <configuration>
                    <jsDir>${basedir}/staticResources</jsDir>
					<!-- this is actually the default -->
                    <includes>**/*.js</includes>
					<!-- maybe you need to exclude compressed JS files -->
                    <excludes>**/*_compressed.js</excludes>
					<!-- this is actually the default -->
                    <caseSensitive>true</caseSensitive>
                    <outputBaseDirectory>${project.build.directory}/site/</outputBaseDirectory>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
							<!-- include the desired reports -->
							<!--<report>jslint</report>-->
                            <report>jsdoc</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>
	<!-- Profile section -->
    <profiles>
		<!-- CI - build:  Copy static resources and test db to /target folder. -->
        <profile>
            <id>copy</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-resources-plugin</artifactId>
                        <version>2.6</version>
                        <executions>
                            <execution>
                                <id>copy-staticResources</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${basedir}/target/staticResources</outputDirectory>
                                    <includeEmptyDirs>true</includeEmptyDirs>
                                    <resources>
                                        <resource>
                                            <directory>${basedir}/staticResources</directory>
                                            <filtering>false</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>copy-db</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <configuration>
                                    <outputDirectory>${basedir}/target/db</outputDirectory>
                                    <includeEmptyDirs>true</includeEmptyDirs>
                                    <resources>
                                        <resource>
                                            <directory>${basedir}/db</directory>
                                            <filtering>false</filtering>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
